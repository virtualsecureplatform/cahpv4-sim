DEFINE_INST_LOAD(lb, sext(8, mem_read_b(c, addr)))
DEFINE_INST_LOAD(lbu, mem_read_b(c, addr))
DEFINE_INST_LOAD(lw, mem_read_w(c, addr))
DEFINE_INST_STORE(sb, mem_write_b(c, addr, val))
DEFINE_INST_STORE(sw, mem_write_w(c, addr, val))

DEFINE_INST_RRR(add,  +,   lhs + rhs)
DEFINE_INST_RRR(sub,  -,   lhs - rhs)
DEFINE_INST_RRR(xor,  ^,   lhs ^ rhs)
DEFINE_INST_RRR(or,   |,   lhs | rhs)
DEFINE_INST_RRR(and,  &,   lhs & rhs)
DEFINE_INST_RRR(sll,  <<,  lhs << rhs)
DEFINE_INST_RRR(srl,  >>,  lhs >> rhs)
DEFINE_INST_RRR(sra,  >>>, asr(lhs, rhs))
DEFINE_INST_RRR(slt,  <s,  (int16_t)lhs < (int16_t)rhs ? 1 : 0)
DEFINE_INST_RRR(sltu, <u,  (uint16_t)lhs < (uint16_t)rhs ? 1 : 0)

DEFINE_INST_RRR(mul,  *,   lhs * rhs)
DEFINE_INST_RRR(mulh, *h, asr((int32_t)lhs * (int32_t)rhs, 16))
DEFINE_INST_RRR(mulhsu, *hsu, asr((int32_t)lhs * (uint32_t)rhs, 16))
DEFINE_INST_RRR(mulhu, *hu, ((uint32_t)lhs * (uint32_t)rhs) >> 16)
DEFINE_INST_RRR(div, /s, (int16_t)lhs / (int16_t)rhs)
DEFINE_INST_RRR(divu, /u, (uint16_t)lhs / (uint16_t)rhs)
DEFINE_INST_RRR(rem, %s, (int16_t)lhs % (int16_t)rhs)
DEFINE_INST_RRR(remu, %u, (uint16_t)lhs % (uint16_t)rhs)

DEFINE_INST_RRSimm11(addi,  +,   lhs + rhs)
DEFINE_INST_RRSimm11(xori,  ^,   lhs ^ rhs)
DEFINE_INST_RRSimm11(ori,   |,   lhs | rhs)
DEFINE_INST_RRSimm11(andi,  &,   lhs & rhs)
DEFINE_INST_RRUimm4 (slli,  <<,  lhs << rhs)
DEFINE_INST_RRUimm4 (srli,  >>,  lhs >> rhs)
DEFINE_INST_RRUimm4 (srai,  >>>, asr(lhs, rhs))
DEFINE_INST_RRSimm11(slti,  <s,  (int16_t)lhs < (int16_t)rhs ? 1 : 0)
DEFINE_INST_RRSimm11(sltiu, <u,  (uint16_t)lhs < (uint16_t)rhs ? 1 : 0)

DEFINE_INST_BCC(beq, ==, lhs == rhs)
DEFINE_INST_BCC(bne, !=, lhs != rhs)
DEFINE_INST_BCC(blt, <s, (int16_t)lhs < (int16_t)rhs)
DEFINE_INST_BCC(bge, >=s, (int16_t)lhs >= (int16_t)rhs)
DEFINE_INST_BCC(bltu, <u, (uint16_t)lhs < (uint16_t)rhs)
DEFINE_INST_BCC(bgeu, >=u, (uint16_t)lhs >= (uint16_t)rhs)
